1.  需求分析
================================================================================

1> 搭建界面
(1) 上半部分，固定的，可以使用Storyboard实现
(2) 下半部分，答案区按钮和备选区按钮数量会根据题目发生变化，可以考虑使用代码实现

2>  图片的放大缩小处理
3>  加载数据(字典转模型)
4>  游戏交互部分的实现
(1) 点击备选区按钮，文字到答案区
(2) 点击答案区按钮，文字恢复到备选区
(3) 答案检测
*   错误：提示用户
*   正确：提示和用户，进入下一题

5>  提示功能
6>  收尾工作
(1) 图标
(2) 启动画面

2.  搭建界面(上半部分)
================================================================================
1>  新建项目
2>  导入素材(图标和启动图片暂时不导入)
3>  搭建界面上半部分
*   按钮的Inset属性使用技巧实现边框效果
*   如何一次性修改多个控件的共同属性
*   金币按钮的文字对齐方式的细节处理
*   禁止金币按钮的交互
取消User Interaction Enabled/Highlighted Adjuests Image，注意两者区别

4>  用代码修改状态栏的显示
-(UIStatusBarStyle)preferredStatusBarStyle
{
    return UIStatusBarStyleLightContent;
}


3.  显示大图
================================================================================
1>  放大显示
(1) 增加遮罩
(2) 将图像移动至顶层
[self.view bringSubviewToFront:self.iconButton];
(3) 动画放大图像，同时增加遮罩的透明度
[UIView animateWithDuration:1.0f animations:^{
    ...
}];

2>  缩小图片
(1) 增加遮罩按钮的监听方法
(2) 块动画缩小图像按钮，恢复位置
(3) 动画结束后，删除遮罩

问题：每次点击时，遮罩都会重复被创建
解决方法：建立遮罩的属性，并通过懒加载的方式创建

3>  添加图片按钮的点击方法，点击图片放大图片

问题：第一次点击时，整个页面灰蒙蒙的，后面就好了？
问题原因：由于遮罩是懒加载的，将图片按钮移动到顶层之后，才会被创建
解决方法：先调用一次getter方法

4>  点击图片按钮同样缩小

5>  重构代码，整合放大缩小的方法

6>  按钮的高亮调整图像的处理，以及禁止用户交互

7>  注释的修改

4.  导入数据模型
================================================================================
1>  创建数据模型
2>  字典转模型方法，顺带介绍代码块的设置
3>  添加模型数组属性，并跟踪模型列表的加载情况
4>  description方法介绍，并建议description方法的编写格式
5>  NSLog时，关于中文输出的解决方法：直接拖入NSArray-Log的两个文件
6>  在数据模型中添加其他属性的好处以及建议
7>  initWithDict方法命名中的W需要大写，并提示编码规范

5.  下一题
================================================================================
1>  思路
(1) 题目索引递增
(2) 取出题目模型
(3) 设置题目基本信息（图片、标签等）
(4) 设置答案按钮
(5) 设置备选按钮

2>  基本信息
(1) 设置基本信息，编号，描述，图片按钮，进一步体会模型中增加image属性的好处

问题：到达最后一题时出现数组越界
解决方法：重新连线并传递参数，如果到达最后一题，禁用按钮

3>  答案按钮
4>  备选按钮

5>  代码重构，让主方法在阅读时的思路更加连贯！

6>  备选按钮的可重用优化 & 设置按钮标题

6.  备选按钮点击处理
================================================================================
1> 在答案区查找第一个文字为空的按钮
2> 隐藏备选按钮
3> 胜负判断

7.  答题区按钮点击处理
================================================================================
1> 是否有文字，如果没有直接返回
2> 查找备选区标题文字相同的按钮，恢复隐藏
3> 清空当前按钮文字
4> 恢复按钮颜色

8.  提示功能
================================================================================
1> 将答题区的按钮全部清空
2> 在备选区查找第一个按钮，并模拟点击
* 对查找备选按钮的优化

9.  分数处理
================================================================================

10.  随机备选答案
================================================================================
OC中数组的块代码应用示例


